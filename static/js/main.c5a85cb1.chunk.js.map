{"version":3,"sources":["Views/MonsterSingle/MonsterSingle.jsx","component/Form/Form.jsx","Views/AddMonster/AddMonster.jsx","component/MonsterCard/MonsterCard.jsx","component/delete/Delete.jsx","component/MonsterTable/MonsterTable.jsx","component/Search/Search.jsx","component/MonsterContainer/MonsterContainer.jsx","Views/MonstersArchive/MonsterArchive.jsx","App.js","serviceWorker.js","index.js"],"names":["MonsterSingle","props","console","log","id","useParams","useState","monster","SetMonster","useEffect","fetch","then","res","json","data","className","name","email","phone","username","website","Form","user","setUser","history","useHistory","handleChange","event","target","value","onSubmit","preventDefault","push","htmlFor","type","onChange","onClick","AddMonster","MonsterCard","src","alt","Delete","handleDelete","MonsterTable","filteredMonsters","map","item","key","to","Search","search","MonsterContainer","monsters","setMonsters","setSearch","filter","toLowerCase","startsWith","MonsterArchive","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c5a85cb1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nfunction MonsterSingle(props) {\n    console.log(props);\n    const { id } = useParams();\n    console.log(id);\n    const [monster, SetMonster] = useState({});\n    const getData = () => {\n        console.log('1')\n        fetch(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => res.json()).then(data => {\n            SetMonster(data);\n            console.log(data);\n        })\n    }\n\n    useEffect(() => { getData(); }, []);\n\n    return (\n        <div className='MonsterSingle'>\n            <div className='card'>\n                <div className='card-header'>\n                    {monster.name}\n                </div>\n                <div className='card-body'>\n                    email: {monster.email}<br />\n                    name: {monster.name}<br />\n                    phone: {monster.phone}<br />\n                    username: {monster.username}<br />\n                    website: {monster.website}<br />\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default MonsterSingle\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\"\nexport default function Form(props) {\n    const [user, setUser] = useState({\n        name: '',\n        email: ''\n    })\n    let history = useHistory();\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setUser({ ...user, [name]: value });\n    }\n    const handleClear = () => {\n        setUser({ name: '', email: '' })\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        history.push(\"/monsters\")\n        // handleAdd({ ...user, id: 12 });\n        // axios.post('https://jsonplaceholder.typicode.com/users', user).then(res => {\n        //     handleAdd(res.data);\n        // })\n        // .catch(err => console.log(err))\n    }\n    const { name, email } = user;\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">name:</label>\n            <input type=\"text\" name='name' id='name' onChange={handleChange} value={name} />\n            <label htmlFor=\"email\">email:</label>\n            <input type=\"email\" name='email' id='email' onChange={handleChange} value={email} />\n            <button type=\"submit\">save</button>\n            <button type=\"button\" onClick={handleClear}>clear</button>\n        </form>\n    )\n\n}\n","import React from 'react';\nimport Form from '../../component/Form/Form';\nfunction AddMonster(props) {\n    return (\n        <div className='AddMonster'>\n            <Form />\n        </div>\n    )\n}\n\nexport default AddMonster;\n","import React, { Component } from 'react'\nimport './monster-card.scss';\nexport default function MonsterCard({ monster }) {\n\n    return (\n        <div className='monster-card'>\n            <img className='profile' src={'https://api.adorable.io/avatars/256/Ali@adorable.png' + monster.id} alt='profile' />\n            <h1>{monster.name}</h1>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Delete({ handleDelete , id }) {\n    return (\n        <button onClick={()=>handleDelete(id)} >pack me!</button>\n    )\n}\n","import React from 'react';\nimport MonsterCard from '../MonsterCard/MonsterCard';\nimport Delete from '../delete/Delete';\nimport './monsterTable.scss';\nimport { Link } from 'react-router-dom';\nfunction MonsterTable({ filteredMonsters, handleDelete }) {\n\n    return (\n        <div className='monster-grid'>\n            {filteredMonsters.map((item) => (\n                <div key={item.id}>\n                    <Link to={`/monsters/${item.id}`}>\n                        <MonsterCard monster={item} />\n                    </Link>\n                    <Delete handleDelete={handleDelete} id={item.id} />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default MonsterTable;\n","import React from 'react';\nfunction Search ({ search, handleChange  }) {\n        return (\n            <div className='search-group'>\n                <label htmlFor={'search'}>search</label>\n                <input id='search' name={'search'} onChange={handleChange} value={search} />\n            </div>\n        )\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react';\nimport MonsterTable from '../MonsterTable/MonsterTable';\nimport Search from '../Search/Search';\nimport './monster-container.scss';\nexport default function MonsterContainer() {\n\n    const [monsters, setMonsters] = useState([]);\n    const [search, setSearch] = useState('');\n    const [showForm, setShowForm] = useState(false);\n\n    const getData = () => {\n        console.log('1')\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(data => {\n            setMonsters(data);\n            console.log(data);\n        })\n    }\n\n    useEffect(() => { getData(); }, []);\n\n    const handleDelete = (id) => {\n        setMonsters(monsters.filter(monster => monster.id !== id));\n    }\n    const handleChange = (event) => {\n        const { value } = event.target;\n        setSearch(value);\n    }\n    // const handleAddMonster = (obj) => {\n    //     setMonsters([obj, ...monsters])\n    // }\n    // const toggleForm = () => {\n    //     setShowForm(!showForm)\n    // }\n    let filteredMonsters = monsters.filter(item => item.name.toLowerCase().startsWith(search.toLowerCase()))\n    return (\n        <div className='monster-container'>\n            <Search handleChange={handleChange} search={search} />\n            {/* <button onClick={toggleForm}> {showForm ? \"hide form\" : \"show form\"} </button>\n            {\n                showForm ? <Form handleAdd={handleAddMonster} /> : null\n            } */}\n            <MonsterTable filteredMonsters={filteredMonsters} handleDelete={handleDelete} />\n        </div>\n    )\n}\n","import React from 'react';\nimport MonsterContainer from '../../component/MonsterContainer/MonsterContainer';\nfunction MonsterArchive() {\n    return (\n        <div className=\"MonsterArchive\">\n            <MonsterContainer />\n        </div>\n    )\n}\nexport default MonsterArchive;","import React from 'react';\nimport './App.css';\nimport MonsterSingle from './Views/MonsterSingle/MonsterSingle';\nimport AddMonster from './Views/AddMonster/AddMonster';\nimport MonsterArchive from './Views/MonstersArchive/MonsterArchive';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/monsters/add\">add</Link>\n            </li>\n            <li>\n              <Link to=\"/monsters\">monsters</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/monsters\" component={MonsterArchive}>\n          </Route>\n          <Route path=\"/monsters/add\" component={AddMonster}>\n          </Route>\n          <Route path=\"/monsters/:id\" component={MonsterSingle}>\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}